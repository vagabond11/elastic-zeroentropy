name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.1)'
        required: true
        type: string

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Update version
      run: |
        # Update version in pyproject.toml
        sed -i 's/version = ".*"/version = "${{ github.event.inputs.version }}"/' pyproject.toml
        
        # Update version in __init__.py
        sed -i 's/__version__ = ".*"/__version__ = "${{ github.event.inputs.version }}"/' src/elastic_zeroentropy/__init__.py
        
        # Show the changes
        echo "Updated pyproject.toml:"
        grep 'version = ' pyproject.toml
        echo "Updated __init__.py:"
        grep '__version__ = ' src/elastic_zeroentropy/__init__.py
    
    - name: Run tests
      run: |
        pip install -e ".[dev]"
        pytest --cov=elastic_zeroentropy --cov-report=term-missing
      env:
        ZEROENTROPY_API_KEY: test-key
    
    - name: Build package
      run: |
        python -m build
        twine check dist/*
    
    - name: Test package
      run: |
        pip install dist/elastic_zeroentropy-*.whl
        python -c "import elastic_zeroentropy; print(f'Version: {elastic_zeroentropy.__version__}')"
    
    - name: Create Git tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add pyproject.toml src/elastic_zeroentropy/__init__.py
        git commit -m "Bump version to ${{ github.event.inputs.version }}"
        git tag v${{ github.event.inputs.version }}
        git push origin main
        git push origin v${{ github.event.inputs.version }}
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}
        release_name: Release v${{ github.event.inputs.version }}
        body: |
          ## Release v${{ github.event.inputs.version }}
          
          ### What's Changed
          - Version bump to ${{ github.event.inputs.version }}
          
          ### Installation
          ```bash
          pip install elastic-zeroentropy==${{ github.event.inputs.version }}
          ```
        draft: false
        prerelease: false
    
    - name: Publish to PyPI
      if: secrets.PYPI_API_TOKEN != ''
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
    
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/elastic_zeroentropy-${{ github.event.inputs.version }}.tar.gz
        asset_name: elastic-zeroentropy-${{ github.event.inputs.version }}.tar.gz
        asset_content_type: application/gzip
    
    - name: Upload Wheel Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/elastic_zeroentropy-${{ github.event.inputs.version }}-py3-none-any.whl
        asset_name: elastic-zeroentropy-${{ github.event.inputs.version }}-py3-none-any.whl
        asset_content_type: application/zip 